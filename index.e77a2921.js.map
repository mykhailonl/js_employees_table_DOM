{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCGA,IAAI,EAAiB,EAAG,SAAS,gBAAgB,CAAC,eAC5C,EAAW,EAAG,SAAS,gBAAgB,CAAC,oBACxC,EAAQ,SAAS,aAAa,CAAC,SAE/B,EAAY,CAChB,KAAM,OACN,SAAU,OACV,OAAQ,OACR,IAAK,OACL,OAAQ,MACV,EAEM,EAAY,SAAC,CAAA,CAAQ,CAAA,CAAO,CAAlC,EACE,OAAQ,GACN,IAAK,OACH,EAAM,IAAI,CAAC,SAAC,CAAA,CAAO,CAAnB,EACE,IAAM,EAAY,EAAM,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC,WAAW,GAChD,EAAY,EAAM,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC,WAAW,GAEtD,OAAO,EAAU,aAAa,CAAC,EACjC,GAEA,KAEF,KAAK,WACH,EAAM,IAAI,CAAC,SAAC,CAAA,CAAO,CAAnB,EACE,IAAM,EAAgB,EAAM,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC,WAAW,GACpD,EAAgB,EAAM,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC,WAAW,GAE1D,OAAO,EAAc,aAAa,CAAC,EACrC,GACA,KAEF,KAAK,SACH,EAAM,IAAI,CAAC,SAAC,CAAA,CAAO,CAAnB,EACE,IAAM,EAAc,EAAM,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC,WAAW,GAClD,EAAc,EAAM,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC,WAAW,GAExD,OAAO,EAAY,aAAa,CAAC,EACnC,GACA,KAEF,KAAK,MACH,EAAM,IAAI,CAAC,SAAC,CAAA,CAAO,CAAnB,EAIE,MAAO,AAHU,CAAC,EAAM,KAAK,CAAC,EAAE,CAAC,SAAS,CACzB,CAAC,EAAM,KAAK,CAAC,EAAE,CAAC,SAAS,AAG5C,GACA,KAEF,KAAK,SACH,EAAM,IAAI,CAAC,SAAC,CAAA,CAAO,CAAnB,EAIE,MAAO,AAHa,CAAC,EAAM,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,IAAK,IAChD,CAAC,EAAM,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,IAAK,GAGtE,GACA,KAEF,SACE,OAAO,CACX,CAEA,MAAO,AAAiB,QAAjB,EAAyB,EAAQ,EAAM,OAAO,EACvD,EAEA,EAAQ,OAAO,CAAC,SAAC,CAAjB,EACE,EAAO,gBAAgB,CAAC,QAAS,WAC/B,IAAM,EAAa,EAAO,SAAS,CAAC,WAAW,GACzC,EAAQ,AAA0B,SAA1B,CAAS,CAAC,EAAW,CAAc,MAAQ,MAEzD,CAAA,CAAS,CAAC,EAAW,CAAG,EAExB,IAAM,EAAkB,EAAU,EAAY,EAAe,GACvD,EAAW,SAAS,sBAAsB,EAEhD,CAAA,EAAM,SAAS,CAAG,GAElB,EAAgB,OAAO,CAAC,SAAC,CAAzB,EACE,EAAS,WAAW,CAAC,EACvB,GAEA,EAAM,MAAM,CAAC,EACf,EACF,GAEA,EAAM,gBAAgB,CAAC,QAAS,SAAC,CAAjC,EACE,IAAM,EAAa,EAAM,aAAa,CAAC,aAEnC,GACF,CAAA,EAAW,SAAS,CAAG,EADzB,EAIA,IAAM,EAAY,EAAM,MAAM,CAAC,OAAO,CAAC,MAElC,GAAa,IAAc,GAIhC,CAAA,EAAU,SAAS,CAAG,QAAtB,CACF,GAEA,IAAM,EAAY,CAAC,EACb,EAAyB,WAG7B,AAFsB,SAAS,gBAAgB,CAAC,iBAElC,OAAO,CAAC,SAAC,CAAvB,EACE,EAAa,MAAM,EACrB,EACF,EAEM,EAAe,SAAC,CAAtB,EAAiC,IAAA,EAAA,UAAA,MAAA,CAAA,GAAA,AAAA,KAAA,IAAA,SAAA,CAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAO,OAChC,EAAW,SAAS,aAAa,CAAC,QAExC,CAAA,EAAS,SAAS,CAAI,GAAY,MAAA,CAAV,EAAU,KAElC,IAAM,EAAW,SAAS,aAAa,CAAC,SAClC,EAAsB,EAAU,WAAW,GAgBjD,OAdA,CAAS,CAAC,EAAoB,CAAG,GAEjC,EAAS,gBAAgB,CAAC,QAAS,SAAC,CAApC,EACE,IAEA,CAAS,CAAC,EAAoB,CAAG,EAAM,MAAM,CAAC,KAAK,AACrD,GAEA,EAAS,IAAI,CAAG,EAChB,EAAS,IAAI,CAAG,EAChB,EAAS,YAAY,CAAC,UAAW,GAEjC,EAAS,MAAM,CAAC,GAET,CACT,EAEM,EAAiB,SAAC,CAAxB,EACE,IAAM,EAAY,SAAS,aAAa,CAAC,UAIzC,OAFA,EAAU,SAAS,CAAG,EAEf,CACT,EAEM,EAAsB,WAC1B,EAAiB,EAAG,SAAS,gBAAgB,CAAC,cAChD,EAEM,EAAO,SAAS,aAAa,CAAC,QAC9B,EAAkB,SAAS,aAAa,CAAC,OAE/C,CAAA,EAAgB,SAAS,CAAG,oBAE5B,IAAM,EAAc,SAAS,sBAAsB,GAEnD,EAAY,WAAW,CAAC,EAAa,SACrC,EAAY,WAAW,CAAC,EAAa,aAErC,IAAM,EAAS,SAAS,aAAa,CAAC,SAChC,EAAgB,SAAS,aAAa,CAAC,SAE7C,CAAA,EAAc,IAAI,CAAG,SACrB,EAAc,KAAK,CAAG,QACtB,EAAc,YAAY,CAAC,UAAW,UAEtC,EAAc,gBAAgB,CAAC,SAAU,SAAC,CAA1C,EACE,IAEA,CAAS,CAAC,EAAc,IAAI,CAAC,CAAG,EAAM,MAAM,CAAC,KAAK,AACpD,GAEA,EAAO,SAAS,CAAG,UACnB,EAAO,MAAM,CAAC,GAEd,EAAc,MAAM,CAAC,EAAe,UACpC,EAAc,MAAM,CAAC,EAAe,cACpC,EAAc,MAAM,CAAC,EAAe,WACpC,EAAc,MAAM,CAAC,EAAe,aACpC,EAAc,MAAM,CAAC,EAAe,cACpC,EAAc,MAAM,CAAC,EAAe,kBAEpC,EAAY,WAAW,CAAC,GACxB,EAAY,WAAW,CAAC,EAAa,MAAO,WAC5C,EAAY,WAAW,CAAC,EAAa,SAAU,WAE/C,IAAM,EAAa,SAAS,aAAa,CAAC,SAE1C,CAAA,EAAW,SAAS,CAAG,gBACvB,EAAY,WAAW,CAAC,GAExB,EAAgB,MAAM,CAAC,GAEvB,EAAK,MAAM,CAAC,GAEZ,IAAM,EAAqB,SAAC,CAAA,CAAY,CAAA,CAAY,CAApD,EACE,IAAM,EAAW,SAAS,aAAa,CAAC,OAClC,EAAQ,SAAS,aAAa,CAAC,MAC/B,EAAc,SAAS,aAAa,CAAC,QAc3C,OAZA,EAAS,SAAS,CAAC,GAAG,CAAC,gBACvB,EAAS,SAAS,CAAC,GAAG,CAAC,GACvB,EAAS,YAAY,CAAC,UAAW,gBAEjC,EAAM,SAAS,CAAC,GAAG,CAAC,SACpB,EAAM,SAAS,CAAG,EAElB,EAAY,SAAS,CAAG,EAExB,EAAS,MAAM,CAAC,GAChB,EAAS,MAAM,CAAC,GAET,CACT,EAEM,EAAY,SAAC,CAAnB,EACE,IAAM,EAAQ,SAAS,aAAa,CAAC,MAIrC,OAFA,EAAM,SAAS,CAAG,EAEX,CACT,EAEM,EAAiB,WAGrB,AAFe,SAAS,gBAAgB,CAAC,SAElC,OAAO,CAAC,SAAC,CAAhB,EACE,EAAM,KAAK,CAAG,EAChB,EACF,EAEA,EAAgB,gBAAgB,CAAC,SAAU,SAAC,CAA5C,EAIE,GAHA,EAAM,cAAc,GACpB,IAEI,EAAU,IAAI,CAAC,MAAM,CAAG,EAC1B,OAAO,EAAK,MAAM,CAChB,EACE,QACA,mBACA,8CAKN,GAAI,CAAC,EAAU,QAAQ,CACrB,OAAO,EAAK,MAAM,CAChB,EACE,QACA,uBACA,mCAKN,GAAI,EAAU,GAAG,CAAG,IAAM,EAAU,GAAG,CAAG,GACxC,OAAO,EAAK,MAAM,CAChB,EACE,QACA,kBACA,2CAKN,IAAM,EACJ,IAAM,OAAO,EAAU,MAAM,EAAE,cAAc,CAAC,SAE1C,EAAc,CAClB,KAAM,EAAU,IAAI,CACpB,SAAU,EAAU,QAAQ,CAC5B,OAAQ,EAAU,MAAM,EAAI,EAAc,KAAK,CAC/C,IAAK,EAAU,GAAG,CAClB,OAAQ,CACV,EAEM,EAAQ,SAAS,aAAa,CAAC,MAerC,OAbA,EAAM,MAAM,CAAC,EAAU,EAAY,IAAI,GACvC,EAAM,MAAM,CAAC,EAAU,EAAY,QAAQ,GAC3C,EAAM,MAAM,CAAC,EAAU,EAAY,MAAM,GACzC,EAAM,MAAM,CAAC,EAAU,EAAY,GAAG,GACtC,EAAM,MAAM,CAAC,EAAU,EAAY,MAAM,GAEzC,EAAM,MAAM,CAAC,GAEb,IAEA,EAAc,KAAK,CAAG,QACtB,IAEO,EAAK,MAAM,CAChB,EACE,UACA,oBACA,+CAGN","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["/* eslint-disable no-shadow */ \"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar employeeTable = _to_consumable_array(document.querySelectorAll(\"tbody > tr\"));\nvar headers = _to_consumable_array(document.querySelectorAll(\"thead > tr > th\"));\nvar tbody = document.querySelector(\"tbody\");\nvar sortState = {\n    name: \"desc\",\n    position: \"desc\",\n    office: \"desc\",\n    age: \"desc\",\n    salary: \"desc\"\n};\nvar sortingFn = function(sortBy, table, sortingOrder) {\n    switch(sortBy){\n        case \"name\":\n            table.sort(function(emplA, emplB) {\n                var emplAName = emplA.cells[0].innerText.toLowerCase();\n                var emplBName = emplB.cells[0].innerText.toLowerCase();\n                return emplAName.localeCompare(emplBName);\n            });\n            break;\n        case \"position\":\n            table.sort(function(emplA, emplB) {\n                var emplAPosition = emplA.cells[1].innerText.toLowerCase();\n                var emplBPosition = emplB.cells[1].innerText.toLowerCase();\n                return emplAPosition.localeCompare(emplBPosition);\n            });\n            break;\n        case \"office\":\n            table.sort(function(emplA, emplB) {\n                var emplAOffice = emplA.cells[2].innerText.toLowerCase();\n                var emplBOffice = emplB.cells[2].innerText.toLowerCase();\n                return emplAOffice.localeCompare(emplBOffice);\n            });\n            break;\n        case \"age\":\n            table.sort(function(emplA, emplB) {\n                var emplAAge = +emplA.cells[3].innerText;\n                var emplBAge = +emplB.cells[3].innerText;\n                return emplAAge - emplBAge;\n            });\n            break;\n        case \"salary\":\n            table.sort(function(emplA, emplB) {\n                var emplASalary = +emplA.cells[4].innerText.slice(1).replace(\",\", \"\");\n                var emplBSalary = +emplB.cells[4].innerText.slice(1).replace(\",\", \"\");\n                return emplASalary - emplBSalary;\n            });\n            break;\n        default:\n            return table;\n    }\n    return sortingOrder === \"asc\" ? table : table.reverse();\n};\nheaders.forEach(function(header) {\n    header.addEventListener(\"click\", function() {\n        var headerName = header.innerText.toLowerCase();\n        var order = sortState[headerName] === \"desc\" ? \"asc\" : \"desc\";\n        sortState[headerName] = order;\n        var sortedEmployees = sortingFn(headerName, employeeTable, order);\n        var fragment = document.createDocumentFragment();\n        tbody.innerHTML = \"\";\n        sortedEmployees.forEach(function(employee) {\n            fragment.appendChild(employee);\n        });\n        tbody.append(fragment);\n    });\n});\ntbody.addEventListener(\"click\", function(event) {\n    var lastActive = tbody.querySelector(\"tr.active\");\n    if (lastActive) lastActive.className = \"\";\n    var targetRow = event.target.closest(\"tr\");\n    if (!targetRow || targetRow === lastActive) return;\n    targetRow.className = \"active\";\n});\nvar formState = {};\nvar removeAllNotifications = function() {\n    var notifications = document.querySelectorAll(\".notification\");\n    notifications.forEach(function(notification) {\n        notification.remove();\n    });\n};\nvar inputCreator = function(labelName) {\n    var type = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"text\";\n    var newLabel = document.createElement(\"label\");\n    newLabel.innerText = \"\".concat(labelName, \":\");\n    var newInput = document.createElement(\"input\");\n    var normalizedInputName = labelName.toLowerCase();\n    formState[normalizedInputName] = \"\";\n    newInput.addEventListener(\"input\", function(event) {\n        removeAllNotifications();\n        formState[normalizedInputName] = event.target.value;\n    });\n    newInput.name = normalizedInputName;\n    newInput.type = type;\n    newInput.setAttribute(\"data-qa\", normalizedInputName);\n    newLabel.append(newInput);\n    return newLabel;\n};\nvar optionsCreator = function(optionName) {\n    var newOption = document.createElement(\"option\");\n    newOption.innerText = optionName;\n    return newOption;\n};\nvar updateEmployeeTable = function() {\n    employeeTable = _to_consumable_array(document.querySelectorAll(\"tbody > tr\"));\n};\nvar body = document.querySelector(\"body\");\nvar newEmployeeForm = document.createElement(\"form\");\nnewEmployeeForm.className = \"new-employee-form\";\nvar formFilling = document.createDocumentFragment();\nformFilling.appendChild(inputCreator(\"Name\"));\nformFilling.appendChild(inputCreator(\"Position\"));\nvar select = document.createElement(\"label\");\nvar selectElement = document.createElement(\"select\");\nselectElement.name = \"office\";\nselectElement.value = \"Tokyo\";\nselectElement.setAttribute(\"data-qa\", \"office\");\nselectElement.addEventListener(\"change\", function(event) {\n    removeAllNotifications();\n    formState[selectElement.name] = event.target.value;\n});\nselect.innerText = \"Office:\";\nselect.append(selectElement);\nselectElement.append(optionsCreator(\"Tokyo\"));\nselectElement.append(optionsCreator(\"Singapore\"));\nselectElement.append(optionsCreator(\"London\"));\nselectElement.append(optionsCreator(\"New York\"));\nselectElement.append(optionsCreator(\"Edinburgh\"));\nselectElement.append(optionsCreator(\"San Francisco\"));\nformFilling.appendChild(select);\nformFilling.appendChild(inputCreator(\"Age\", \"number\"));\nformFilling.appendChild(inputCreator(\"Salary\", \"number\"));\nvar formButton = document.createElement(\"button\");\nformButton.innerText = \"Save to table\";\nformFilling.appendChild(formButton);\nnewEmployeeForm.append(formFilling);\nbody.append(newEmployeeForm);\nvar createNotification = function(notifClass, notifTitle, notifDescription) {\n    var newNotif = document.createElement(\"div\");\n    var title = document.createElement(\"h2\");\n    var description = document.createElement(\"span\");\n    newNotif.classList.add(\"notification\");\n    newNotif.classList.add(notifClass);\n    newNotif.setAttribute(\"data-qa\", \"notification\");\n    title.classList.add(\"title\");\n    title.innerText = notifTitle;\n    description.innerText = notifDescription;\n    newNotif.append(title);\n    newNotif.append(description);\n    return newNotif;\n};\nvar tdCreator = function(data) {\n    var newTd = document.createElement(\"td\");\n    newTd.innerText = data;\n    return newTd;\n};\nvar resetAllFields = function() {\n    var fields = document.querySelectorAll(\"input\");\n    fields.forEach(function(field) {\n        field.value = \"\";\n    });\n};\nnewEmployeeForm.addEventListener(\"submit\", function(event) {\n    event.preventDefault();\n    removeAllNotifications();\n    if (formState.name.length < 4) return body.append(createNotification(\"error\", \"Name field error\", \"Name field cant be shorter than 4 symbols\"));\n    if (!formState.position) return body.append(createNotification(\"error\", \"Position field error\", \"Position field cannot be empty\"));\n    if (formState.age < 18 || formState.age > 90) return body.append(createNotification(\"error\", \"Age field error\", \"Employee needs to be 18 years or older\"));\n    var normalizedSalary = \"$\" + Number(formState.salary).toLocaleString(\"en-US\");\n    var newEmployee = {\n        name: formState.name,\n        position: formState.position,\n        office: formState.office || selectElement.value,\n        age: formState.age,\n        salary: normalizedSalary\n    };\n    var newTr = document.createElement(\"tr\");\n    newTr.append(tdCreator(newEmployee.name));\n    newTr.append(tdCreator(newEmployee.position));\n    newTr.append(tdCreator(newEmployee.office));\n    newTr.append(tdCreator(newEmployee.age));\n    newTr.append(tdCreator(newEmployee.salary));\n    tbody.append(newTr);\n    updateEmployeeTable();\n    selectElement.value = \"Tokyo\";\n    resetAllFields();\n    return body.append(createNotification(\"success\", \"Sucessfully added\", \"New employee sucessfully added to the table\"));\n});\n\n//# sourceMappingURL=index.e77a2921.js.map\n","/* eslint-disable no-shadow */\n'use strict';\n\nlet employeeTable = [...document.querySelectorAll('tbody > tr')];\nconst headers = [...document.querySelectorAll('thead > tr > th')];\nconst tbody = document.querySelector('tbody');\n\nconst sortState = {\n  name: 'desc',\n  position: 'desc',\n  office: 'desc',\n  age: 'desc',\n  salary: 'desc',\n};\n\nconst sortingFn = (sortBy, table, sortingOrder) => {\n  switch (sortBy) {\n    case 'name':\n      table.sort((emplA, emplB) => {\n        const emplAName = emplA.cells[0].innerText.toLowerCase();\n        const emplBName = emplB.cells[0].innerText.toLowerCase();\n\n        return emplAName.localeCompare(emplBName);\n      });\n\n      break;\n\n    case 'position':\n      table.sort((emplA, emplB) => {\n        const emplAPosition = emplA.cells[1].innerText.toLowerCase();\n        const emplBPosition = emplB.cells[1].innerText.toLowerCase();\n\n        return emplAPosition.localeCompare(emplBPosition);\n      });\n      break;\n\n    case 'office':\n      table.sort((emplA, emplB) => {\n        const emplAOffice = emplA.cells[2].innerText.toLowerCase();\n        const emplBOffice = emplB.cells[2].innerText.toLowerCase();\n\n        return emplAOffice.localeCompare(emplBOffice);\n      });\n      break;\n\n    case 'age':\n      table.sort((emplA, emplB) => {\n        const emplAAge = +emplA.cells[3].innerText;\n        const emplBAge = +emplB.cells[3].innerText;\n\n        return emplAAge - emplBAge;\n      });\n      break;\n\n    case 'salary':\n      table.sort((emplA, emplB) => {\n        const emplASalary = +emplA.cells[4].innerText.slice(1).replace(',', '');\n        const emplBSalary = +emplB.cells[4].innerText.slice(1).replace(',', '');\n\n        return emplASalary - emplBSalary;\n      });\n      break;\n\n    default:\n      return table;\n  }\n\n  return sortingOrder === 'asc' ? table : table.reverse();\n};\n\nheaders.forEach((header) => {\n  header.addEventListener('click', () => {\n    const headerName = header.innerText.toLowerCase();\n    const order = sortState[headerName] === 'desc' ? 'asc' : 'desc';\n\n    sortState[headerName] = order;\n\n    const sortedEmployees = sortingFn(headerName, employeeTable, order);\n    const fragment = document.createDocumentFragment();\n\n    tbody.innerHTML = '';\n\n    sortedEmployees.forEach((employee) => {\n      fragment.appendChild(employee);\n    });\n\n    tbody.append(fragment);\n  });\n});\n\ntbody.addEventListener('click', (event) => {\n  const lastActive = tbody.querySelector('tr.active');\n\n  if (lastActive) {\n    lastActive.className = '';\n  }\n\n  const targetRow = event.target.closest('tr');\n\n  if (!targetRow || targetRow === lastActive) {\n    return;\n  }\n\n  targetRow.className = 'active';\n});\n\nconst formState = {};\nconst removeAllNotifications = () => {\n  const notifications = document.querySelectorAll('.notification');\n\n  notifications.forEach((notification) => {\n    notification.remove();\n  });\n};\n\nconst inputCreator = (labelName, type = 'text') => {\n  const newLabel = document.createElement('label');\n\n  newLabel.innerText = `${labelName}:`;\n\n  const newInput = document.createElement('input');\n  const normalizedInputName = labelName.toLowerCase();\n\n  formState[normalizedInputName] = '';\n\n  newInput.addEventListener('input', (event) => {\n    removeAllNotifications();\n\n    formState[normalizedInputName] = event.target.value;\n  });\n\n  newInput.name = normalizedInputName;\n  newInput.type = type;\n  newInput.setAttribute('data-qa', normalizedInputName);\n\n  newLabel.append(newInput);\n\n  return newLabel;\n};\n\nconst optionsCreator = (optionName) => {\n  const newOption = document.createElement('option');\n\n  newOption.innerText = optionName;\n\n  return newOption;\n};\n\nconst updateEmployeeTable = () => {\n  employeeTable = [...document.querySelectorAll('tbody > tr')];\n};\n\nconst body = document.querySelector('body');\nconst newEmployeeForm = document.createElement('form');\n\nnewEmployeeForm.className = 'new-employee-form';\n\nconst formFilling = document.createDocumentFragment();\n\nformFilling.appendChild(inputCreator('Name'));\nformFilling.appendChild(inputCreator('Position'));\n\nconst select = document.createElement('label');\nconst selectElement = document.createElement('select');\n\nselectElement.name = 'office';\nselectElement.value = 'Tokyo';\nselectElement.setAttribute('data-qa', 'office');\n\nselectElement.addEventListener('change', (event) => {\n  removeAllNotifications();\n\n  formState[selectElement.name] = event.target.value;\n});\n\nselect.innerText = 'Office:';\nselect.append(selectElement);\n\nselectElement.append(optionsCreator('Tokyo'));\nselectElement.append(optionsCreator('Singapore'));\nselectElement.append(optionsCreator('London'));\nselectElement.append(optionsCreator('New York'));\nselectElement.append(optionsCreator('Edinburgh'));\nselectElement.append(optionsCreator('San Francisco'));\n\nformFilling.appendChild(select);\nformFilling.appendChild(inputCreator('Age', 'number'));\nformFilling.appendChild(inputCreator('Salary', 'number'));\n\nconst formButton = document.createElement('button');\n\nformButton.innerText = 'Save to table';\nformFilling.appendChild(formButton);\n\nnewEmployeeForm.append(formFilling);\n\nbody.append(newEmployeeForm);\n\nconst createNotification = (notifClass, notifTitle, notifDescription) => {\n  const newNotif = document.createElement('div');\n  const title = document.createElement('h2');\n  const description = document.createElement('span');\n\n  newNotif.classList.add('notification');\n  newNotif.classList.add(notifClass);\n  newNotif.setAttribute('data-qa', 'notification');\n\n  title.classList.add('title');\n  title.innerText = notifTitle;\n\n  description.innerText = notifDescription;\n\n  newNotif.append(title);\n  newNotif.append(description);\n\n  return newNotif;\n};\n\nconst tdCreator = (data) => {\n  const newTd = document.createElement('td');\n\n  newTd.innerText = data;\n\n  return newTd;\n};\n\nconst resetAllFields = () => {\n  const fields = document.querySelectorAll('input');\n\n  fields.forEach((field) => {\n    field.value = '';\n  });\n};\n\nnewEmployeeForm.addEventListener('submit', (event) => {\n  event.preventDefault();\n  removeAllNotifications();\n\n  if (formState.name.length < 4) {\n    return body.append(\n      createNotification(\n        'error',\n        'Name field error',\n        'Name field cant be shorter than 4 symbols',\n      ),\n    );\n  }\n\n  if (!formState.position) {\n    return body.append(\n      createNotification(\n        'error',\n        'Position field error',\n        'Position field cannot be empty',\n      ),\n    );\n  }\n\n  if (formState.age < 18 || formState.age > 90) {\n    return body.append(\n      createNotification(\n        'error',\n        'Age field error',\n        'Employee needs to be 18 years or older',\n      ),\n    );\n  }\n\n  const normalizedSalary =\n    '$' + Number(formState.salary).toLocaleString('en-US');\n\n  const newEmployee = {\n    name: formState.name,\n    position: formState.position,\n    office: formState.office || selectElement.value,\n    age: formState.age,\n    salary: normalizedSalary,\n  };\n\n  const newTr = document.createElement('tr');\n\n  newTr.append(tdCreator(newEmployee.name));\n  newTr.append(tdCreator(newEmployee.position));\n  newTr.append(tdCreator(newEmployee.office));\n  newTr.append(tdCreator(newEmployee.age));\n  newTr.append(tdCreator(newEmployee.salary));\n\n  tbody.append(newTr);\n\n  updateEmployeeTable();\n\n  selectElement.value = 'Tokyo';\n  resetAllFields();\n\n  return body.append(\n    createNotification(\n      'success',\n      'Sucessfully added',\n      'New employee sucessfully added to the table',\n    ),\n  );\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","employeeTable","document","querySelectorAll","headers","tbody","querySelector","sortState","position","office","age","salary","sortingFn","sortBy","table","sortingOrder","sort","emplA","emplB","emplAName","cells","innerText","toLowerCase","emplBName","localeCompare","emplAPosition","emplBPosition","emplAOffice","emplBOffice","emplAAge","emplASalary","replace","reverse","forEach","header","addEventListener","headerName","order","sortedEmployees","fragment","createDocumentFragment","innerHTML","employee","appendChild","append","event","lastActive","className","targetRow","target","closest","formState","removeAllNotifications","notifications","notification","remove","inputCreator","labelName","type","arguments","newLabel","createElement","concat","newInput","normalizedInputName","value","setAttribute","optionsCreator","optionName","newOption","updateEmployeeTable","body","newEmployeeForm","formFilling","select","selectElement","formButton","createNotification","notifClass","notifTitle","notifDescription","newNotif","title","description","classList","add","tdCreator","data","newTd","resetAllFields","fields","field","preventDefault","normalizedSalary","Number","toLocaleString","newEmployee","newTr"],"version":3,"file":"index.e77a2921.js.map"}